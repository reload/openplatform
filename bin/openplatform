#!/usr/bin/env php
<?php

require __DIR__ . '/../vendor/autoload.php';

use DDB\OpenPlatform\OpenPlatform;
use Symfony\Component\Yaml\Yaml;

$app = new Silly\Application();

$app->command('search [--fields=] token query', function ($fields, $token, $query) {
    $op = new OpenPlatform($token);

    $req = $op->searchRequest();
    $req->setQuery($query);
    if ($fields) {
        $req->setFields(explode(',', $fields));
    }

    $res = $req->execute();

    print(Yaml::dump($res->getData()));
    print "Hitcount: " . $res->getHitCount() . "\n";
})
    ->descriptions('Perform a search request', [
        '--fields' => 'Comma separated list of fields to fetch',
        'token' => 'Access token',
        'query' => 'Search string'
    ]);

$app->command('generic token path parameters*', function ($token, $path, $parameters) {
    $op = new OpenPlatform($token);

    $req = $op->genericRequest($path);

    foreach ($parameters as $parameter) {
        $parts = explode('=', $parameter);
        if (!count($parts)) {
            throw new RuntimeException('Invalid parameter ' . $parameter);
        }
        list($name, $value) = $parts;
        if (preg_match('/^json:(.*)$/', $value, $matches)) {
            $value = json_decode($matches[1]);
        }
        $req->set($name, $value);
    }

    $res = $req->execute();

    print(Yaml::dump($res->getResponse()));
})
    ->descriptions('Perform a generic request.', [
        'token' => 'Access token',
        'path' => 'API path to query.',
        'parameters' => 'Request parameters in <field>=<value> format. <value> can be "json:<json_string>" for complex data.'
    ]);

$app->run();
